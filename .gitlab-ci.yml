stages:
  - build-package
  - test-components
  - test-integration
  - export-package
  - test-singularity

############################################################
#####              BUILD PACKAGE                       #####
############################################################

build_hep-benchmark-suite:
  stage: build-package
  script:
      - yum install -y python3-pip
      - pip3 install --upgrade setuptools wheel
      - python3 setup.py sdist bdist_wheel
  artifacts:
      paths:
        - dist/
  except:
      refs:
        - master
        - qa

############################################################
#####              TEST INSTALLATION                   #####
############################################################

.definition_test_installation: &template_test_installation
    # This job installs the hep-benchmark-suite using "make" 
    # then runs a configurable set of benchmarks 
    stage: test-components
    image: $CI_REGISTRY_IMAGE/hep-benchmark-suite-base-cc7:latest
    script: 
      - export BMK_VOLUME=/scratch/jobs/${CI_JOB_NAME}_${CI_JOB_ID}
      - export BMK_RUNDIR=${BMK_VOLUME}/hep-benchmark-suite
      - export AMQ_ARGUMENTS="--queue_host=$QUEUE_HOST --queue_port=$QUEUE_PORT --username=$QUEUE_USERNAME --password=$QUEUE_PASSWD --topic=$QUEUE_TOPIC"
      - if [[ -z $BMK_HEPSCORE_CONF ]]; then
          export BMK_HEPSCORE_CONF=/opt/hep-benchmark-suite/scripts/hepscore/hepscore_ci.yaml;
        fi
      - $CI_PROJECT_DIR/test/test_installation_and_run.sh
    after_script:
      - export BMK_VOLUME=/scratch/jobs/${CI_JOB_NAME}_${CI_JOB_ID}
      - export BMK_RUNDIR=${BMK_VOLUME}/hep-benchmark-suite
      - tar -czf hep-benchmark-suite-test-$CI_JOB_ID.tgz ${BMK_RUNDIR} /opt/hep-benchmark-suite 
      - rm -rf ${BMK_VOLUME}
    only:
     variables:
       - $CI_COMMIT_BRANCH =~ /^qa-.*$/
       - $CI_COMMIT_BRANCH =~ /^qa$/
    artifacts:
        paths:
           - hep-benchmark-suite-test-$CI_JOB_ID.tgz
        expire_in: 1 week
        when: always

..job_test_hepscore_run_cc7:
  tags:
    -  hep-benchmark-suite-docker-runner 
  before_script:
    - export BMKLIST="hepscore"
  

# FIXME, does not work but covers a case not often used
.job_test_hepscore_run_cc7_singularity:
  tags:
    -  hep-benchmark-suite-docker-runner 
  before_script:
    - useradd -d /builds/{GITLAB_USER} -g users -M -N unprivUser
    - chown -R unprivUser:users ..
    - sudo -H -i -u unprivUser bash
    - export BMKLIST="hepscore"
    - export BMK_HEPSCORE_CONF=/opt/hep-benchmark-suite/scripts/hepscore/hepscore_ci_singularity.yaml
  <<: *template_test_installation

..job_test_hs06_run_cc7:
   tags:
     -  hep-benchmark-suite-docker-runner 
   before_script:
       - export BMKLIST="hs06_32"
       - rm -f /scratch/HEPSPEC/SPEC_CPU2006_v1.2/VERIFIED_INSTALLATION
   <<: *template_test_installation


..job_test_spec2017_run_cc7:
   tags:
     -  hep-benchmark-suite-docker-runner 
   before_script:
       - export BMKLIST="spec2017"
   <<: *template_test_installation


############################################################
#####              TEST COMPONENTS                     #####
############################################################

test_python_plugins:
  stage: test-components
  image: $CI_REGISTRY_IMAGE/hep-benchmark-suite-cc7:latest
  script:
      - yum install -y python3 python3-pip
      - pip3 install tox
      - cd $CI_PROJECT_DIR/
      - tox
  except:
      refs:
        - master
        - qa

test_yaml_files:
  stage: test-components
  image: $CI_REGISTRY_IMAGE/hep-benchmark-suite-cc7:latest
  script:
      - yum install -y yamllint
      - cd $CI_PROJECT_DIR/
      - yamllint config/benchmarks.yml
  except:
      refs:
        - master
        - qa

job_test_db12_benchmark:
  stage: test-integration
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
      - yum install -y python3-pip
      - pip3 install --user .
      - export PATH=~/.local/bin:$PATH
      - bmkrun --rundir . --benchmarks db12
  artifacts:
        paths:
           - result_profile.json
           - run_config.yaml
        expire_in: 1 week
        when: always
  except:
      refs:
        - master
        - qa

.job_test_docker_hs06:
  stage: test-integration
  image: $CI_REGISTRY_IMAGE/hep-benchmark-suite-base-cc7:latest
  tags:
     -  hep-benchmark-suite-docker-runner
  script:
      - yum install -y python3 python3-pip
      - cd $CI_PROJECT_DIR/
      - pip3 install -r requirements.txt --user
      - pip3 install --user .
      - export PATH=/root/.local/bin:$PATH
      - sed -i  "/url_tarball/d" config/benchmarks.yml
      - echo "  url_tarball:" "\"${HS06URL}\"" >> config/benchmarks.yml
      - bmkrun -c config/benchmarks.yml -d /tmp/test_suite -b hs06_32 -m docker
  artifacts:
        paths:
           - /tmp/test_suite/result_profile.json
        expire_in: 1 week
        when: always
  except:
      refs:
        - master
        - qa


job_build_wheels:
  stage: export-package
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
      - yum install -y python3 python3-pip
      - cd $CI_PROJECT_DIR/
      - pip3 install wheel --user
      - pip3 wheel -r requirements.txt --wheel-dir=whl .
      - tar -cvf package_wheels.tar whl/
  artifacts:
        paths:
           - package_wheels.tar
        expire_in: 1 week
        when: always
  except:
      refs:
        - master
        - qa


############################################################
#####              TEST SINGULARITY                    #####
############################################################

.definition_test_qa_singularity: &template_test_qa_singularity
    # This job tests the hep-benchmark-suite
    # running a configurable set of benchmarks defined in $BMKLIST
  stage: test-singularity
  tags: 
    - docker-privileged-xl
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  script:
    - yum install -y singularity python3-pip
    # non-root user
    - useradd -d $(pwd) -g users -M -N unprivUser
    - chown -R unprivUser:users ..
    - su - unprivUser
    - set -e
    # install the benchmark suite python package
    - python3 -m pip install --user .
    - export PATH=$PATH:~/.local/bin
    #- export AMQ_ARGUMENTS="--queue_host=$QUEUE_HOST --queue_port=$QUEUE_PORT --username=$QUEUE_USERNAME --password=$QUEUE_PASSWD --topic=$QUEUE_TOPIC"
    - export BMK_VOLUME=/tmp/${CI_JOB_NAME}_${CI_JOB_ID}
    - export RESULTS_FILE=$CI_JOB_NAME.json
    - export SINGULARITY_CACHEDIR=${BMK_VOLUME}/singularity_cache
    # run $BMKLIST as singularity
    - bmkrun -v --mode=singularity -c ~/.local/config/benchmarks.yml --rundir=$BMK_VOLUME --benchmarks=$BMKLIST --file=$RESULTS_FILE
    - mv $BMK_VOLUME/$RESULTS_FILE $BMK_VOLUME/run_config.yaml .
    - rm -rf $BMK_VOLUME
  only:
    variables:
      - $CI_COMMIT_BRANCH =~ /^qa-.*$/
      - $CI_COMMIT_BRANCH =~ /^qa$/
      - $CI_COMMIT_BRANCH =~ /^v2.*/
  artifacts:
      paths:
        - ./*.json
        - ./*.yaml
      expire_in: 1 week
      when: always

test_sing_db12:
    before_script:
        - export BMKLIST="db12"
    <<: *template_test_qa_singularity

test_sing_hepscore:
    before_script:
        - export BMKLIST="hepscore"
    <<: *template_test_qa_singularity


.test_sing_hs06:
    # needs either priv runner + pre-installed SPEC || tarball location
    before_script:
      - export BMKLIST="hs06_32"
    <<: *template_test_qa_singularity

.test_sing_in_sing_spec2017:
    # needs either priv runner + pre-installed SPEC || tarball location
    before_script:
        - export BMKLIST="spec2017"
    <<: *template_test_qa_singularity
