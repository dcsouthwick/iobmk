stages:
  - build-package
  - test-components
  - test-integration
  - test-singularity
  - test-docker

variables:
  GIT_DEPTH: "3"

############################################################
#####              BUILD PACKAGE                       #####
############################################################

build_hep-benchmark-suite:
  stage: build-package
  dependencies: []
  script:
      - yum install -y -q python3-pip
      - python3 -m pip install --upgrade setuptools wheel
      - python3 setup.py sdist bdist_wheel
  artifacts:
      paths:
        - dist/
  except:
      refs:
        - master
        - qa
        
job_build_wheels:
  # is this job needed? it performs the same step as bdist_wheel (above)
  stage: build-package
  dependencies: []
  script:
      - yum install -y -q python3-pip
      - python3 -m pip install wheel --user
      - python3 -m pip wheel -r requirements.txt --wheel-dir=whl .
      - tar -cvf package_wheels.tar whl/
  artifacts:
        paths:
           - package_wheels.tar
        expire_in: 1 week
        when: always
  except:
      refs:
        - master
        - qa

############################################################
#####              TEST COMPONENTS                     #####
############################################################

test_python_plugins:
  stage: test-components
  dependencies: []
  script:
      - yum install -y -q python3 python3-pip
      - python3 -m pip install tox
      - cd $CI_PROJECT_DIR/
      - tox
  except:
      refs:
        - master
        - qa

test_yaml_files:
  stage: test-components
  dependencies: []
  script:
      - yum install -y -q yamllint
      - cd hepbenchmarksuite/config
      - yamllint benchmarks.yml
  except:
      refs:
        - master
        - qa

############################################################
#####              TEST INTEGRATION                    #####
############################################################

job_test_db12_benchmark:
  stage: test-integration
  dependencies: []
  script:
      - yum install -y -q python3-pip
      - python3 -m pip install --user .
      - export PATH=~/.local/bin:$PATH
      - bmkrun --rundir . --benchmarks db12
  artifacts:
        paths:
           - result_profile.json
           - run_config.yaml
        expire_in: 1 week
        when: always
  except:
      refs:
        - master
        - qa

############################################################
#####              TEST SINGULARITY                    #####
############################################################

.definition_test_qa_singularity: &template_test_qa_singularity
    # This job tests the hep-benchmark-suite
    # running a configurable set of benchmarks defined in $BMKLIST
  stage: test-singularity
  tags: 
    - docker-privileged-xl
  # use image that has singularity.cern repo
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  dependencies: []
  script:
    - yum install -y -q singularity python3-pip
    # non-root user
    - useradd -d $(pwd) -g users -M -N unprivUser
    - chown -R unprivUser:users ..
    - su - unprivUser
    - set -e
    # install the benchmark suite python package
    - python3 -m pip install --user .
    - export PATH=$PATH:~/.local/bin
    #- export AMQ_ARGUMENTS="--queue_host=$QUEUE_HOST --queue_port=$QUEUE_PORT --username=$QUEUE_USERNAME --password=$QUEUE_PASSWD --topic=$QUEUE_TOPIC"
    - export BMK_VOLUME=/tmp/${CI_JOB_NAME}_${CI_JOB_ID}
    - export RESULTS_FILE=$CI_JOB_NAME.json
    - export SINGULARITY_CACHEDIR=${BMK_VOLUME}/singularity_cache
    # run $BMKLIST as singularity
    - bmkrun -v --mode=singularity -c ~/.local/config/benchmarks.yml --rundir=$BMK_VOLUME --benchmarks=$BMKLIST --file=$RESULTS_FILE
    - mv $BMK_VOLUME/$RESULTS_FILE $BMK_VOLUME/run_config.yaml .
    - rm -rf $BMK_VOLUME
  only:
    variables:
      - $CI_COMMIT_BRANCH =~ /^qa-.*$/
      - $CI_COMMIT_BRANCH =~ /^qa$/
      - $CI_COMMIT_BRANCH =~ /^v2.*/
  artifacts:
      paths:
        - ./*.json
        - ./*.yaml
      expire_in: 1 week
      when: always

test_sing_db12:
    before_script:
        - export BMKLIST="db12"
    <<: *template_test_qa_singularity

test_sing_hepscore:
    before_script:
        - export BMKLIST="hepscore"
    <<: *template_test_qa_singularity


.test_sing_hs06:
    # needs either priv runner + pre-installed SPEC || tarball location
    before_script:
      - export BMKLIST="hs06_32"
    <<: *template_test_qa_singularity

.test_sing_in_sing_spec2017:
    # needs either priv runner + pre-installed SPEC || tarball location
    before_script:
        - export BMKLIST="spec2017"
    <<: *template_test_qa_singularity

############################################################
#####              TEST DOCKER                         #####
############################################################

.definition_test_qa_docker: &template_test_qa_docker
    # This job tests the hep-benchmark-suite
    # running a configurable set of benchmarks defined in $BMKLIST
  stage: test-docker
  tags: 
    - docker-privileged
  image: gitlab-registry.cern.ch/linuxsupport/cc7-base
  dependencies: []
  services:
    - docker:19.03.1-dind
  variables:
    # Disable TLS following https://about.gitlab.com/2019/07/31/docker-in-docker-with-docker-19-dot-03/
    # This will result in a warning that the docker-in-docker service may not have started successfully
    DOCKER_TLS_CERTDIR: ""
    DOCKER_HOST: tcp://docker:2375/ 
  script:
    - yum install -y -q python3-pip docker-client
    # non-root user
    - useradd -d $(pwd) -g users -M -N unprivUser
    - chown -R unprivUser:users ..
    - usermod -aG docker unprivUser
    - su - unprivUser
    - set -e
    # install the benchmark suite python package
    - python3 -m pip install --user .
    - export PATH=$PATH:~/.local/bin
    #- export AMQ_ARGUMENTS="--queue_host=$QUEUE_HOST --queue_port=$QUEUE_PORT --username=$QUEUE_USERNAME --password=$QUEUE_PASSWD --topic=$QUEUE_TOPIC"
    - export BMK_VOLUME=/tmp/${CI_JOB_NAME}_${CI_JOB_ID}
    - export RESULTS_FILE=$CI_JOB_NAME.json
    - export SINGULARITY_CACHEDIR=${BMK_VOLUME}/singularity_cache
    # run $BMKLIST as docker
    - bmkrun -v --mode=docker -c ~/.local/config/benchmarks.yml --rundir=$BMK_VOLUME --benchmarks=$BMKLIST --file=$RESULTS_FILE
    - mv $BMK_VOLUME/$RESULTS_FILE $BMK_VOLUME/run_config.yaml .
    - rm -rf $BMK_VOLUME
  only:
    variables:
      - $CI_COMMIT_BRANCH =~ /^qa-.*$/
      - $CI_COMMIT_BRANCH =~ /^qa$/
      - $CI_COMMIT_BRANCH =~ /^v2.*/
  artifacts:
      paths:
        - ./*.json
        - ./*.yaml
      expire_in: 1 week
      when: always

.test_docker_hs06:
  stage: test-integration
  image: $CI_REGISTRY_IMAGE/hep-benchmark-suite-base-cc7:latest
  tags:
     -  hep-benchmark-suite-docker-runner
  script:
      - yum install -y -q python3 python3-pip
      - cd $CI_PROJECT_DIR/
      - python3 -m pip install -r requirements.txt --user
      - python3 -m pip install --user .
      - export PATH=/root/.local/bin:$PATH
      - sed -i  "/url_tarball/d" config/benchmarks.yml
      - echo "  url_tarball:" "\"${HS06URL}\"" >> config/benchmarks.yml
      - bmkrun -c config/benchmarks.yml -d /tmp/test_suite -b hs06_32 -m docker
  artifacts:
        paths:
           - /tmp/test_suite/result_profile.json
        expire_in: 1 week
        when: always
  except:
      refs:
        - master
        - qa